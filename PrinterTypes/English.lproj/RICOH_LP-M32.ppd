*PPD-Adobe: "4.1"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1993 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*%------------------------------------------------------------------
*%Version Number:                  "1"
*%Revision Number:                 "1"
*%Platform Supported:              "PC"
*%Localized To:                    "US"
*%Modifier:                        ""
*%Support Number:                  ""
*%Comments:
*%------------------------------------------------------------------
*FormatVersion: "4.1"
*FileVersion: "1.3"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "RI_62001.PPD"
*Product: "(RICOH LP6200 PS PrintView)"
*PSVersion: "(2012.020) 2"
*ModelName: "RICOH LP-M32"
*NickName: "RICOH LP6200 PS PrintView"
*% === Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *Option1/Memory Configuration: PickOne
*DefaultOption1: 8MB
*Option1 8MB/8 MB: ""
*Option1 16MB/16 MB: ""
*CloseUI: *Option1

*OpenUI *Option2/LCIT: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*OpenUI *Option3/Mailbox: Boolean
*DefaultOption3: False
*Option3 True/Installed: ""
*Option3 False/Not Installed: ""
*CloseUI: *Option3

*CloseGroup: InstallableOptions

*%====UI Constraints ===================

*UIConstraints: *Option2 False *InputSlot LCIT
*UIConstraints: *Option3 True  *OutputBin SideTray
*UIConstraints: *Option3 False *OutputBin Bin0
*UIConstraints: *Option3 False *OutputBin Bin1
*UIConstraints: *Option3 False *OutputBin Bin2
*UIConstraints: *Option3 False *OutputBin Bin3
*UIConstraints: *Option3 False *OutputBin Bin4
*UIConstraints: *Option3 False *OutputBin Bin5
*UIConstraints: *Option3 False *OutputBin Bin6
*UIConstraints: *Option3 False *OutputBin Bin7
*UIConstraints: *Option3 False *OutputBin Bin8
*UIConstraints: *Option3 False *OutputBin Bin9

*UIConstraints: *OutputBin SideTray *Jog
*UIConstraints: *Jog *OutputBin SideTray 

*UIConstraints: *PageSize A3R *InputSlot LCIT
*UIConstraints: *PageSize 11x17R *InputSlot LCIT
*UIConstraints: *PageSize Executive *InputSlot LCIT
*UIConstraints: *PageSize HalfLetterR *InputSlot LCIT
*UIConstraints: *InputSlot LCIT *PageSize A3R 
*UIConstraints: *InputSlot LCIT *PageSize 11x17R
*UIConstraints: *InputSlot LCIT *PageSize Executive 
*UIConstraints: *InputSlot LCIT *PageSize HalfLetterR 

*UIConstraints: *PageRegion A3R *InputSlot LCIT
*UIConstraints: *PageRegion 11x17R *InputSlot LCIT
*UIConstraints: *PageRegion Executive *InputSlot LCIT
*UIConstraints: *PageRegion HalfLetterR *InputSlot LCIT
*UIConstraints: *InputSlot LCIT *PageRegion A3R 
*UIConstraints: *InputSlot LCIT *PageRegion 11x17R 
*UIConstraints: *InputSlot LCIT *PageRegion Executive 
*UIConstraints: *InputSlot LCIT *PageRegion HalfLetterR 

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP
*StartEmulator_hplj: "currentfile /hpcl statusdict /emulate get exec "
*StopEmulator_hplj: "<1B7F>0"

*FreeVM: "1211827"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*FileSystem: True. 
*?FileSystem: "
  save false
   (%disk?%) 
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse 
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore"
*End

*Throughput: "32"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End

*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*OpenUI *Resolution:  PickOne
*OrderDependency: 20 AnySetup *Resolution
*DefaultResolution: 400dpi
*Resolution 400dpi: "1 dict dup /HWResolution [400 400] put setpagedevice"
*Resolution 300dpi: "1 dict dup /HWResolution [300 300] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch  
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul  
add   1 exch   sub  } ifelse  }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================

*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize LegalR/Legal(R): "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A3R/A3(R): "
    2 dict dup /PageSize [842 1190] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A5R/A5(R): "
    2 dict dup /PageSize [420 595] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B4R/B4(R): "
    2 dict dup /PageSize [729 1032] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B5: "
    2 dict dup /PageSize [516 729] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize 11x17R/11x17(R): "
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [540 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize HalfLetterR/Half Letter(R): "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  10 dict
   dup [612 792] (Letter) put
   dup [612 1008] (LegalR) put
   dup [842 1190] (A3R) put
   dup [595 842] (A4) put
   dup [420 595] (A5R) put
   dup [729 1032] (B4R) put
   dup [516 729] (B5) put
   dup [792 1224] (11x17R) put
   dup [540 756] (Executive) put
   dup [396 612] (HalfLetterR) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion LegalR/Legal(R): "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A3R/A3(R): "
    2 dict dup /PageSize [842 1190] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A5R/A5(R): "
    2 dict dup /PageSize [420 595] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion B4R/B4(R): "
    2 dict dup /PageSize [729 1032] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion B5: "
    2 dict dup /PageSize [516 729] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion 11x17R/11x17(R): "
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive: "
    2 dict dup /PageSize [540 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion HalfLetterR/Half Letter(R): "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "12.6001 15.3601 601.56 783.36"
*ImageableArea LegalR: "8.64 11.6401 600 996.6"
*ImageableArea A3R: "8.64 11.64 838.08 1179.48"
*ImageableArea A4: "8.7601 11.5201 580.92 833.28"
*ImageableArea A5R: "8.64 11.64 415.68 583.8"
*ImageableArea B4R: "8.64 11.6401 722.88 1021.56"
*ImageableArea B5: "8.7601 11.52 498.36 718.08 "
*ImageableArea 11x17R: "8.64 11.64 784.32 1212.6"
*ImageableArea Executive: "8.76 11.52 503.16 748.8"
*ImageableArea HalfLetterR: "8.64 11.6401 384.96 600.6"
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension LegalR: "612 1008"
*PaperDimension A3R: "842 1190"
*PaperDimension A4: "595 842"
*PaperDimension A5R: "420 595"
*PaperDimension B4R: "729 1032"
*PaperDimension B5: "516 729"
*PaperDimension 11x17R: "792 1224"
*PaperDimension Executive: "540 756"
*PaperDimension HalfLetterR: "396 612"


*RequiresPageRegion All: False
*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: LowerTray
*InputSlot LowerTray/Lower Tray: "
  currentpagedevice /InputAttributes get 0 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [0] put
    put setpagedevice
  } ifelse"
*End
*InputSlot UpperTray/Upper Tray: "
  currentpagedevice /InputAttributes get 1 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [1] put
    put setpagedevice
  } ifelse"
*End
*InputSlot LCIT: "
  currentpagedevice /InputAttributes get 2 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End
*?InputSlot: "
  save
  3 dict
  dup /0 (LowerTray) put
  dup /1 (UpperTray) put
  dup /2 (LCIT) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*OpenUI *OutputBin/Paper Destination: PickOne
*OrderDependency: 20 AnySetup *OutputBin
*DefaultOutputBin: UpperTray
*OutputBin UpperTray/Upper Tray: "
  currentpagedevice /OutputAttributes get 0 get
 dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
   1 dict dup /Priority [0] put
    put setpagedevice
  } ifelse"
*End
*OutputBin LowerTray/Lower Tray: "
  currentpagedevice /OutputAttributes get 1 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [1] put
   put setpagedevice
  } ifelse"
*End
*OutputBin SideTray/Side Tray: "
  currentpagedevice /OutputAttributes get 2 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin0/Mailbox Bin #1: "
  currentpagedevice /OutputAttributes get 2 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin1/Mailbox Bin #2: "
  currentpagedevice /OutputAttributes get 3 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [3] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin2/Mailbox Bin #3: "
  currentpagedevice /OutputAttributes get 4 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [4] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin3/Mailbox Bin #4: "
  currentpagedevice /OutputAttributes get 5 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [5] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin4/Mailbox Bin #5: "
  currentpagedevice /OutputAttributes get 6 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [6] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin5/Mailbox Bin #6: "
  currentpagedevice /OutputAttributes get 7 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [7] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin6/Mailbox Bin #7: "
  currentpagedevice /OutputAttributes get 8 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [8] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin7/Mailbox Bin #8: "
  currentpagedevice /OutputAttributes get 9 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [9] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin8/Mailbox Bin #9: "
  currentpagedevice /OutputAttributes get 10 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [10] put
    put setpagedevice
  } ifelse"
*End
*OutputBin Bin9/Mailbox Bin #10: "
  currentpagedevice /OutputAttributes get 11 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /OutputAttributes
    1 dict dup /Priority [11] put
    put setpagedevice
  } ifelse"
*End
*?OutputBin: "
  save
  12 dict
  dup /0 (UpperTray) put
  dup /1 (LowerTray) put
  dup /2 (SideTray) put
  dup /3 (Bin1) put
  dup /4 (Bin2) put
  dup /5 (Bin3) put
  dup /6 (Bin4) put
  dup /7 (Bin5) put
  dup /8 (Bin6) put
  dup /9 (Bin7) put
  dup /10 (Bin8) put
  dup /11 (Bin9) put
 currentpagedevice /OutputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
   { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *OutputBin

*DefaultOutputOrder: UpperTray Normal
*PageStackOrder UpperTray: Normal
*PageStackOrder LowerTray: Normal
*PageStackOrder SideTray: Reverse


*OpenUI *Duplex:  PickOne
*OrderDependency: 50 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/Not Installed: "1 dict dup /Duplex false put setpagedevice
       1 dict dup /Tumble false put setpagedevice"
*End
*Duplex DuplexNoTumble/Duplex Edge: "1 dict dup /Duplex true put setpagedevice
       1 dict dup /Tumble false put setpagedevice"
*End
*Duplex DuplexTumble/Duplex Tumble: "1 dict dup /Duplex true put setpagedevice
       1 dict dup /Tumble true put setpagedevice"
*End
*?Duplex: "save
   currentpagedevice /Duplex get
   { currentpagedevice /Tumble get
       {(DuplexTumble)}{(DuplexEdge)}ifelse
   }
   { (None)} 
   ifelse = flush
restore
"
*End
*CloseUI: *Duplex

*OpenUI *TraySwitch:  Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*OpenUI *Jog:  PickOne
*OrderDependency: 50 AnySetup *Jog
*DefaultJog: None
*Jog None: "1 dict dup /Jog 0 put setpagedevice"
*Jog EndOfJob/Upon End of Job: "1 dict dup /Jog 2 put setpagedevice"
*Jog EndOfSet/Upon End of Set: "1 dict dup /Jog 3 put setpagedevice"
*?Jog: "
save
  [(None)(EndOfJob)(EndOfSet)]
  currentpagedevice /Jog get
  {get} stopped {pop pop (Unknown)} if = flush
restore
"
*End
*CloseUI: *Jog

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.003S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003S)" Standard ROM
*Font Bookman-Light: Standard "(001.003S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Condensed: Standard "(001.001)" Standard ROM
*Font Helvetica-Condensed-Bold: Standard "(001.002)" Standard ROM
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)" Standard ROM
*Font Helvetica-Condensed-Oblique: Standard "(001.001)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "PrinterError: cover open"                         
*Status: "PrinterError: warming up"                          
*Status: "PrinterError: side cover open "                            
*Status: "PrinterError: paper entry misfeed"                
*Status: "PrinterError: paper exit misfeed"                  
*Status: "PrinterError: out of paper"                        
*Status: "PrinterError: no paper tray"                               
*Status: "PrinterError: fixing temperature malfunction"              
*Status: "PrinterError: engine motor malfunction"                  
*Status: "PrinterError: laser diode or scanning mirror malfunction"
*Status: "PrinterError: test printing stage"                 
*Status: "PrinterError: duplex unit : power unit error"              
*Status: "PrinterError: other active unit error"                     
*Status: "PrinterError: service call"                        
*Status: "PrinterError: LCIT: cover is open"                         
*Status: "PrinterError: Duplex unit: cover is open"          
*Status: "PrinterError: Paper transport error"                       
*Status: "PrinterError: Duplex unit paper exit error"                
*Status: "PrinterError: Fixing unit temperture error(too high)"  
*Status: "PrinterError: Fixing unit temperture error(too low)"   
*Status: "PrinterError: Job motor error"                             
*Status: "PrinterError: Photo detector error(sync. detection)"   
*Status: "PrinterError: Engine control board error"          
*Status: "PrinterError: Interlock error"                             
*Status: "PrinterError: Duplex unit: control PCB error"              
*Status: "PrinterError: LCIT: power unit error"                      
*Status: "PrinterError: LCIT: tray lift motor error"         
*Status: "PrinterError: LCIT: control board error"           
*Status: "PrinterError: Toner is near end"                  
*Status: "PrinterError: LCIT: paper exit error"                      
*Status: "PrinterError: LCIT: paper feed error"                      
*Status: "PrinterError: Fusing unit is not set"                      
*Status: "PrinterError: Development unit is not set"         
*Status: "PrinterError: OPC drum is not set"                 
*Status: "PrinterError: Cleaning unit is not set"                    
*Status: "PrinterError: Toner collection bottle is full"             
*Status: "PrinterError: Active paper output tray is not set"     
*Status: "PrinterError: Active paper output tray is full"            
*Status: "PrinterError: Active paper input tray cover is open"   
*Status: "PrinterError: LCOT cover is open"                 
*Status: "PrinterError: Duplex unit paper transport error"       
*Status: "PrinterError: Mail Box door is open "         
*Status: "PrinterError: Mail Box drive motor error "         
*Status: "PrinterError: Developer Motor Error"    
*Status: "PrinterError: Polygon Motor Error "       
*Status: "PrinterError: Tray Lift Motor error"      
*Status: "PrinterError: Main Charger motor Error "  
*Status: "PrinterError: Change Main Charger error"  
*Status: "PrinterError: Mail box jam feed"          
*Status: "PrinterError: Mail box jam trans"         
*Status: "PrinterError: Mail box jam eject"         
*Status: "PrinterError: Mail box full"              
*Status: "PrinterError: LCOT job motor error"       
*Status: "PrinterError: Power Suply Unit error"     
*Status: "PrinterError: LCOT drive motor error"     
*Status: "PrinterError: Duplex: control board error"
*Status: "PrinterError: Engine Communication Error "

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "SerialB"
*Source: "LocalTalk"
*Source: "Parallel"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "cover open"                         
*PrinterError: "warming up"                          
*PrinterError: "side cover open "                            
*PrinterError: "paper entry misfeed"                
*PrinterError: "paper exit misfeed"                  
*PrinterError: "out of paper"                        
*PrinterError: "no paper tray"                               
*PrinterError: "fixing temperature malfunction"              
*PrinterError: "engine motor malfunction"                  
*PrinterError: "laser diode or scanning mirror malfunction"
*PrinterError: "test printing stage"                 
*PrinterError: "duplex unit : power unit error"              
*PrinterError: "other active unit error"                     
*PrinterError: "service call"                        
*PrinterError: "LCIT: cover is open"                         
*PrinterError: "Duplex unit: cover is open"          
*PrinterError: "Paper transport error"                       
*PrinterError: "Duplex unit paper exit error"                
*PrinterError: "Fixing unit temperture error(too high)"  
*PrinterError: "Fixing unit temperture error(too low)"   
*PrinterError: "Job motor error"                             
*PrinterError: "Photo detector error(sync. detection)"   
*PrinterError: "Engine control board error"          
*PrinterError: "Interlock error"                             
*PrinterError: "Duplex unit: control PCB error"              
*PrinterError: "LCIT: power unit error"                      
*PrinterError: "LCIT: tray lift motor error"         
*PrinterError: "LCIT: control board error"           
*PrinterError: "Toner is near end"                  
*PrinterError: "LCIT: paper exit error"                      
*PrinterError: "LCIT: paper feed error"                      
*PrinterError: "Fusing unit is not set"                      
*PrinterError: "Development unit is not set"         
*PrinterError: "OPC drum is not set"                 
*PrinterError: "Cleaning unit is not set"                    
*PrinterError: "Toner collection bottle is full"             
*PrinterError: "Active paper output tray is not set"     
*PrinterError: "Active paper output tray is full"            
*PrinterError: "Active paper input tray cover is open"   
*PrinterError: "LCOT cover is open"                 
*PrinterError: "Duplex unit paper transport error"       
*PrinterError: "Mail Box door is open "         
*PrinterError: "Mail Box drive motor error "         
*PrinterError: "Developer Motor Error"    
*PrinterError: "Polygon Motor Error "       
*PrinterError: "Tray Lift Motor error"      
*PrinterError: "Main Charger motor Error "  
*PrinterError: "Change Main Charger error"  
*PrinterError: "Mail box jam feed"          
*PrinterError: "Mail box jam trans"         
*PrinterError: "Mail box jam eject"         
*PrinterError: "Mail box full"              
*PrinterError: "LCOT job motor error"       
*PrinterError: "Power Suply Unit error"     
*PrinterError: "LCOT drive motor error"     
*PrinterError: "Duplex: control board error"
*PrinterError: "Engine Communication Error "


*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.400dpi/60 lpi / 400 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow


*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*%  For 71 lpi / 400 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.71lpi.400dpi/71 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.400dpi/71 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.400dpi/71 lpi / 400 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.400dpi/71 lpi / 400 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.400dpi/71 lpi / 400 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.71lpi.400dpi/71 lpi / 400 dpi: "70.7107"
*ColorSepScreenFreq CustomColor.71lpi.400dpi/71 lpi / 400 dpi: "70.7107"
*ColorSepScreenFreq ProcessCyan.71lpi.400dpi/71 lpi / 400 dpi: "63.2456"
*ColorSepScreenFreq ProcessMagenta.71lpi.400dpi/71 lpi / 400 dpi: "63.2456"
*ColorSepScreenFreq ProcessYellow.71lpi.400dpi/71 lpi / 400 dpi: "66.6667"

*%  For 47 lpi / 400 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.47lpi.400dpi/47 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle CustomColor.47lpi.400dpi/47 lpi / 400 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.47lpi.400dpi/47 lpi / 400 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.47lpi.400dpi/47 lpi / 400 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.47lpi.400dpi/47 lpi / 400 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.47lpi.400dpi/47 lpi / 400 dpi: "47.1405"
*ColorSepScreenFreq CustomColor.47lpi.400dpi/47 lpi / 400 dpi: "47.1405"
*ColorSepScreenFreq ProcessCyan.47lpi.400dpi/47 lpi / 400 dpi: "42.1637"
*ColorSepScreenFreq ProcessMagenta.47lpi.400dpi/47 lpi / 400 dpi: "42.1637"
*ColorSepScreenFreq ProcessYellow.47lpi.400dpi/47 lpi / 400 dpi: "44.4444"

*% Last Edit Date: Dec 8 1993
*% The byte count of this file should be exactly 029704 or 030547
*% depending on the filesystem it resides in.
*% end of PPD file for Ricoh LP6200 PS PrintView

