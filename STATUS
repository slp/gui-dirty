Status Report
*************

Last updated August 1996.  The most up-to-date version of this status
report is available at:

     `http://www.gnustep.org/Documentation/gnustep-gui/gnustep-gui_toc.html'

   Please send corrections to <scottc@net-community.com>.

   *Key:*

*[10]*
     Complete and tested.

*[8]*
     Missing a few non-core methods, definitely usable.

*[6]*
     Missing several methods, but core is there, usable.

*[4]*
     Begun, but missing core functionality, not usable.

*[2]*
     Skeleton.

*[0]*
     Nothing there.

*[?]*
     Unknown status.

Classes
=======

   Currently none of the classes raise exceptions; and notifications and
notifications centers are non-existent.

*NSActionCell:: [9]*
     Should not require any implementation in the backend as it is an
     abstract class which only defines behaviour.  All methods are
     implemented; the only thing lacking is a test, if needed.

*NSApplication:: [6]*
     The event handling is pretty good though it does not take
     advantage of the NSRunLoop class.  Many of the minor methods are
     implemented.  No window ordering is being maintained, and a number
     of the methods that perform operations on windows are empty.
     Modal loops are not implemented.

*NSBitmapImageRep:: [4]*
     Many of the methods have code, but the class has not been made to
     work; though, some of this could be due to lack of backend
     implementation.  No compression nor generation of TIFF
     representations.

*NSBox:: [8]*
     Many of the methods have code, but whether the class is usable
     depends upon how much implementation has been done in the backend.

*NSBrowser:: [2]*
*NSBrowserCell:: [2]*
*NSButton:: [8]*
     Repeat intervals and key equivalents not implemented.  There
     should be little need for backend implementation as NSButton is
     mainly behavior; its cell class does all drawing.

*NSButtonCell:: [8]*
     Repeat intervals and key equivalents not implemented.  Actual
     ability to use will depend upon backend implementation.

*NSCachedImageRep:: [4]*
     All methods are implemented but its unknown if the class works.

*NSCell:: [8]*
     No determination of component sizes.  Editting text, validating
     input, represented object, and some other odd and end methods not
     implemented.

*NSClipView:: [2]*
*NSColor:: [8]*
     Now implements all colorspaces; however, does not know the
     difference between calibrated and device.

*NSColorList:: [2]*
*NSColorPanel:: [2]*
*NSColorPicker:: [2]*
*NSColorWell:: [2]*
*NSControl:: [8]*
     No field editor; doesn't know how to calculate its size.

*NSCursor:: [2]*
*NSCustomImageRep:: [4]*
     All methods are implemented but it is unknown if the class works.

*NSDataLink:: [2]*
*NSDataLinkManager:: [2]*
*NSDataLinkPanel:: [2]*
*NSDPSContext:: [6]*
     Enough implementation for the backend to do something useful; most
     methods that deal specifically with Display Ghostscript are empty.

*NSEPSImageRep:: [2]*
*NSEvent:: [9]*
     All methods implemented except periodic events.

*NSFont:: [6]*
     Maintains no AFM or glyph information.  Has been filled out some
     more so as to be quite usable with the Display Ghostscript System.

*NSFontManager:: [6]*
     Has been filled out some more so as to be usable with the Display
     Ghostscript System, but still requires additional work.

*NSFontPanel:: [2]*
     May be usable with backend implementation.

*NSForm:: [2]*
*NSFormCell:: [2]*
*NSHelpPanel:: [2]*
*NSImage:: [4]*
     All methods are implemented but it is unknown if the class works.

*NSImageRep:: [4]*
     All methods are implemented but it is unknown if the class works.

*NSMatrix:: [6]*
     Many methods are implemented but more thorough testing needs to be
     done.

*NSMenu:: [8]*
     Almost complete implementation; actual ability to use depends upon
     backend implementation.

*NSMenuCell:: [8]*
     Almost complete implementation; actual ability to use depends upon
     backend implementation.

*NSOpenPanel:: [6]*
     Usability greatly depends upon backend implementation.

*NSPageLayout:: [2]*
*NSPanel:: [2]*
*NSPasteboard:: [2]*
*NSPopUpButton:: [4]*
     Usability greatly depends upon backend implementation.

*NSPrinter:: [2]*
*NSPrintinfo:: [2]*
*NSPrintOperation:: [2]*
*NSPrintPanel:: [2]*
*NSResponder:: [9]*
     Shouldn't require any backend implementation; all methods are
     implemented.

*NSSavePanel:: [6]*
     Usability greatly depends upon backend implementation.

*NSScreen:: [6]*
     Knows nothing about window depth, greatly depends upon backend
     implementation.

*NSScroller:: [2]*
     Most behaviour can probably be taken from NSSlider and
     NSSliderCell.

*NSScrollView:: [2]*
*NSSelection:: [2]*
*NSSlider:: [4]*
     Usability greatly depends upon backend implementation.

*NSSliderCell:: [6]*
     No title or image capability implemented, greatly depends upon
     backend.

*NSSpellChecker:: [2]*
*NSSpellServer:: [2]*
*NSSplitView:: [2]*
*NSText:: [2]*
     Usability greatly depends upon backend implementation.

*NSTextField:: [8]*
     Does not properly send text delegate messages.

*NSTextFieldCell:: [4]*
     Usability greatly depends upon backend implementation.

*NSView:: [6]*
     Maintains subview lists, notification of new window, send resizing
     messages to subviews.  No rotation, scaling, or translation of
     user coordinate space; coordinate conversion doesn't take user
     coordinate space into affect, so everything is based upon device
     coordinate space.  Event handling and tracking rectangles
     implemented.  No scrolling capability.  No cursor management.  No
     printing, paging, or postscript.

*NSWindow:: [4]*
     Most methods not implemented, but maybe usable with backend
     implementation.

*NSWorkspace:: [2]*
     Erich Boleyn has some initial ideas and design.

Protocols
=========

*NSChangeSpelling:: [0]*
*NSColorPickingCustom:: [0]*
*NSColorPickingDefault:: [0]*
*NSDraggingDestination:: [0]*
*NSDraggingInfo:: [0]*
*NSDraggingSource:: [0]*
*NSIgnoreMisspelledWords:: [0]*
*NSMenuActionResponder:: [0]*
*NSNibAwaking:: [0]*
*NSServicesRequests:: [0]*
Functions
=========

   All of the functions have been moved to the backend.

