#
#  Makefile for GNUstep GUI Library Test Examples
#  Copyright (C) 1996 Free Software Foundation, Inc.
#
#  Written by:	Scott Christley <scottc@net-community.com>
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Library General Public
#  License as published by the Free Software Foundation; either
#  version 2 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU
#  Library General Public License for more details.
#
#  You should have received a copy of the GNU Library General Public
#  License along with this library; if not, write to the Free
#  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

SHELL = /bin/sh

#### Start of system configuration section. ####

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
     
CFLAGS = -Wall -Wno-implicit -g -O
CPPFLAGS = @CPPFLAGS@
LDFLAGS =
     
DYNAMIC_BUNDLER_LINKER=@DYNAMIC_BUNDLER_LINKER@
DYNAMIC_LDFLAGS=@DYNAMIC_LDFLAGS@
DYNAMIC_CFLAGS=@DYNAMIC_CFLAGS@
DEFS = @DEFS@
LIBS = -L.. -lobj1 -lobj2 -lobjc -lAppKit @LIBS@ -lm -lieee
EXEEXT = 
OEXT = .o
LIBEXT = .a

#### End of system configuration section. ####

ALL_CPPFLAGS = -I.. -I../Headers $(CPPFLAGS)
ALL_CFLAGS = $(CFLAGS)
ALL_OBJCFLAGS = $(CFLAGS) -Wno-protocol
ALL_LDFLAGS = $(LDFLAGS) $(LIBS)

.SUFFIXES: .m
.m$(OEXT):
	$(CC) -c $(ALL_CPPFLAGS) $(DEFS) $(ALL_OBJCFLAGS) $< -o $*$(OEXT)
.c$(OEXT):
	$(CC) -c $(ALL_CPPFLAGS) $(DEFS) $(ALL_CFLAGS) $< -o $*$(OEXT)

SRCS = \
nsarchiver.m

HDRS =

EXCS = $(SRCS:.m=)
EXECS = $(SRCS:.m=$(EXEEXT))

BUNDLE_NAME=LoadMe
DYNAMIC_MFILES = \
LoadMe.m \
MyCategory.m \
SecondClass.m

DYNAMIC_HFILES = \
LoadMe.h \
MyCategory.h \
SecondClass.h

DYNAMIC_OFILES = $(DYNAMIC_MFILES:.m=$(OEXT))

RCS_FILES = $(SRCS) $(HDRS) $(DYNAMIC_MFILES) $(DYNAMIC_HFILES) \
	Makefile.in NXStringTable.example Makefile.sed.nt
DIST_FILES = $(RCS_FILES) 

# type 'make bundles' if you also want to check bundles.
all: $(EXCS)

# This works for GNU make, but not others.
# %: %$(OEXT) $(srcdir)/../src/libobjects$(LIBEXT)
# 	$(CC) $(ALL_CFLAGS) $< -o $@ $(ALL_LDFLAGS)
# How can I do this in a better way than the ugliness below?
# (but also have it work on old-style /bin/make)

LINK_CMD = $(CC) $(ALL_CFLAGS) $@$(OEXT) -o $@ $(ALL_LDFLAGS)

nsarchiver: nsarchiver$(OEXT) ../libAppKit$(LIBEXT)
	$(LINK_CMD)
diningPhilosophers: diningPhilosophers$(OEXT) ../libAppKit$(LIBEXT)
	$(LINK_CMD)

install:
uninstall:

echo-excs:
	@echo $(EXCS)

remote: server client

# These next few lines give an example of how to compile, link and store
# a bundle.
bundles: $(BUNDLE_NAME).bundle/$(BUNDLE_NAME)

$(DYNAMIC_OFILES): $(DYNAMIC_MFILES) $(DYNAMIC_HFILES)
	$(CC) -c $(ALL_CPPFLAGS) $(DEFS) $(DYNAMIC_CFLAGS) $(ALL_OBJCFLAGS) \
		$(srcdir)/$*.m -o $*$(OEXT)

$(BUNDLE_NAME).bundle/$(BUNDLE_NAME): $(DYNAMIC_OFILES)
	-mkdir $(BUNDLE_NAME).bundle
	-mkdir $(BUNDLE_NAME).bundle/English.lproj
	$(DYNAMIC_BUNDLER_LINKER) -o $(BUNDLE_NAME).bundle/$(BUNDLE_NAME) \
		$(DYNAMIC_OFILES)
	cp $(srcdir)/NXStringTable.example $(BUNDLE_NAME).bundle/English.lproj

mostlyclean:
	rm -f core *~ test08.data textcoder.txt

clean: mostlyclean
	rm -f *$(OEXT) $(EXECS)
	rm -rf $(BUNDLE_NAME).bundle

distclean: clean
	rm -f Makefile config.status

realclean: distclean
	rm -f TAGS

copy-dist: $(DIST_FILES)
	mkdir ../snap/checks
	ln $(DIST_FILES) ../snap/checks

Makefile: $(srcdir)/Makefile.in
	cd ..; $(SHELL) config.status
