Classes in need of implementation
Written by Michael Hanni <mhanni@sprintmail.com> Mon Jul 19 1999
================================================================

*PLEASE* note that these are only classes that are completly or almost
completly empty in GNUstep. Almost EVERY class in the GNU AppKit still
needs work, but you should already know that. ;-)

NSBezierPath
============

	Someone has offered to write this one. Please drop me (Michael) a
	line.

NSComboBox
==========

	NSComboBox
	NSComboBoxCell

	Not taken...

NSDataLink*:
============

        NSDataLink
        NSDataLinkManager
        NSDataLinkPanel

        These are classes from the original OpenStep API. I'm not sure we
        even need to do these.

NSDocument:
===========

	NSDocument
	NSDocumentController

	These classes should be worked on in conjunction with
	NSWindowController.

NSHelpManager:
==============

	NSHelpManager/NSHelpPanel(?)

	No one has taken these. If you want to work on this contact
	Michael Hanni and ask about HTML viewing.

NSInputManager/Server:
======================

	NSInputManager
	NSInputServer

	No one. Could be a nice way of cleaning up the event code.

NSPrint*:
=========

	NSPrintInfo
      	NSPrintOperation
      	NSPrintPanel
      	NSPrinter

        Some code exists for NSPrinter and NSPrintInfo which could be used
        as a basis for these classes. No one has taken these. Would be
        nice if someone could work on this so we could be able to print
        our nice RTF documents when the Text Network is finished.

NSProgressIndicator:
====================

	NSProgressIndicator

	Taken by: Michael Hanni <mhanni@sprintmail.com>

NSRuler*:
=========

	NSRulerMarker
	NSRulerView

	Ruler classes needed for NSText. No one has expressed a desire to
	write these.

NSSecureText*:
==============

	NSSecureTextField
      	NSSecureTextFieldCell

	Still open for work. Should be straight forward.

NSSpell*:
=========

	NSSpellChecker
      	NSSpellServer

	Initial implementations by Scott Christley could be used as start
	on implementation. No one has taken these.

NSTable*:
=========

	NSTableColumn [80%]
      	NSTableHeaderCell [99%]
      	NSTableHeaderView [75%]
      	NSTableView [10%]

	The table classes. Michael Hanni <mhanni@sprintmail.com> is
	writing these, but if anyone wants a project email him.

NSText:
=======

	NSText [80%?]
      	NSTextAttachment
      	NSTextAttachmentCell
        NSTextContainer [95% will need to be looked at when everything
                         works.]
        NSTextStorage [95% (- fixAttributes: inRange:)]
      	NSTextTab
      	NSTextView [10%]
	NSMutableAttributedString Additions
	NSMutableParagraphStyle
	NSString Additions

	Many classes are needed for a full NSText implementation. Much
	code already exists, however much still is needed.

        NSTextTab, NSTextAttachment, and NSTextAttachmentCell should be
        easy tasks that would make excellent first time projects.

	These people are the ones to talk to:

	Richard Frith-Macdonald <richard@brainstorm.co.uk>:
		NS*String/NS*Paragraph* code. Basically anything that
		needs to work directly with the Foundation is Richard's
		ground.

	Michael Hanni <mhanni@sprintmail.com>:
		Coordinator for NSText* development. Contact him if you
		want to work on something or you have questions. Working
		on NSTextView and RTF<->NSAttributedString.

	Esteban Manchado <A2092@correo.dis.ulpgc.es>:
		RTF parsing code. Also if we are really nice to him he
		will help us get HTML parsing done as well. ;-)

	Jonathan Gapen <jagapen@whitewater.chem.wisc.edu>: 
		NSLayoutManager and coordinator for internationalization.

	Daniel Boehringer <boehring@biomed.ruhr-uni-bochum.de>:
		Wrote stand-alone NSText, advisor for extended Text System.

NSWindowController:
===================

	NSWindowController

	No one has taken this. Should be written at the same time as
	NSDocumentController.

Misc:
=====

	I might have missed something so if you notice an error or
	omission please drop a line to <mhanni@sprintmail.com>
