@c -*-texinfo-*-
@chapter Status Report

@ifset TEXT-ONLY
@include version.texi
@end ifset

Last updated August 1996.  The most up-to-date version of this status
report is available at:

@example
@url{http://www.gnustep.org/Documentation/gnustep-gui/gnustep-gui_toc.html}
@end example

Please send corrections to @email{scottc@@net-community.com}.

@emph{Key:}

@table @strong
@item [10]
Complete and tested.
@item [8]
Missing a few non-core methods, definitely usable.
@item [6]
Missing several methods, but core is there, usable.
@item [4]
Begun, but missing core functionality, not usable.
@item [2]
Skeleton.
@item [0]
Nothing there.
@item [?]
Unknown status.
@end table

@section Classes

Currently none of the classes raise exceptions; and notifications and
notifications centers are non-existent.

@table @strong

@item NSActionCell:: [9]
Should not require any implementation in the
backend as it is an abstract class which only defines behaviour.  All
methods are implemented; the only thing lacking is a test, if needed.

@item NSApplication:: [6]
The event handling is pretty good though it
does not take advantage of the NSRunLoop class.  Many of the minor
methods are implemented.  No window ordering is being maintained, and
a number of the methods that perform operations on windows are
empty.  Modal loops are not implemented.

@item NSBitmapImageRep:: [4]
Many of the methods have code, but the
class has not been made to work; though, some of this could be due to
lack of backend implementation.  No compression nor generation of
TIFF representations.

@item NSBox:: [8] 
Many of the methods have code, but whether the class
is usable depends upon how much implementation has been done in the
backend.

@item NSBrowser:: [2]

@item NSBrowserCell:: [2]

@item NSButton:: [8] 
Repeat intervals and key equivalents not
implemented.  There should be little need for backend implementation
as NSButton is mainly behavior; its cell class does all drawing.

@item NSButtonCell:: [8] 
Repeat intervals and key equivalents not
implemented.  Actual ability to use will depend upon backend
implementation.

@item NSCachedImageRep:: [4]
All methods are implemented but its unknown if the class works.

@item NSCell:: [8]
No determination of component sizes.  Editting
text, validating input, represented object, and some other odd and end
methods not implemented.

@item NSClipView:: [2]

@item NSColor:: [8]
Now implements all colorspaces; however, does not know the difference
between calibrated and device.

@item NSColorList:: [2]

@item NSColorPanel:: [2]

@item NSColorPicker:: [2]

@item NSColorWell:: [2]

@item NSControl:: [8]
No field editor; doesn't know how to calculate its size.

@item NSCursor:: [2]

@item NSCustomImageRep:: [4]
All methods are implemented but it is unknown if the class works.

@item NSDataLink:: [2]

@item NSDataLinkManager:: [2]

@item NSDataLinkPanel:: [2]

@item NSDPSContext:: [6] 
Enough implementation for the backend to do
something useful; most methods that deal specifically with Display
Ghostscript are empty.

@item NSEPSImageRep:: [2]

@item NSEvent:: [9]
All methods implemented except periodic events.

@item NSFont:: [6]
Maintains no AFM or glyph information.  Has been filled out some more
so as to be quite usable with the Display Ghostscript System.

@item NSFontManager:: [6]
Has been filled out some more so as to be usable with the Display
Ghostscript System, but still requires additional work.

@item NSFontPanel:: [2]
May be usable with backend implementation.

@item NSForm:: [2]

@item NSFormCell:: [2]

@item NSHelpPanel:: [2]

@item NSImage:: [4]
All methods are implemented but it is unknown if the class works.

@item NSImageRep:: [4]
All methods are implemented but it is unknown if the class works.

@item NSMatrix:: [6]
Many methods are implemented but more thorough testing needs to be done.

@item NSMenu:: [8]
Almost complete implementation; actual ability to use depends upon
backend implementation.

@item NSMenuCell:: [8]
Almost complete implementation; actual ability to use depends upon
backend implementation.

@item NSOpenPanel:: [6]
Usability greatly depends upon backend implementation.

@item NSPageLayout:: [2]

@item NSPanel:: [2]

@item NSPasteboard:: [2]

@item NSPopUpButton:: [4]
Usability greatly depends upon backend implementation.

@item NSPrinter:: [2]

@item NSPrintinfo:: [2]

@item NSPrintOperation:: [2]

@item NSPrintPanel:: [2]

@item NSResponder:: [9]
Shouldn't require any backend implementation; all methods are implemented.

@item NSSavePanel:: [6]
Usability greatly depends upon backend implementation.

@item NSScreen:: [6]
Knows nothing about window depth, greatly depends upon backend implementation.

@item NSScroller:: [2]
Most behaviour can probably be taken from NSSlider and NSSliderCell.

@item NSScrollView:: [2]

@item NSSelection:: [2]

@item NSSlider:: [4]
Usability greatly depends upon backend implementation.

@item NSSliderCell:: [6]
No title or image capability implemented, greatly depends upon backend.

@item NSSpellChecker:: [2]

@item NSSpellServer:: [2]

@item NSSplitView:: [2]

@item NSText:: [2]
Usability greatly depends upon backend implementation.

@item NSTextField:: [8]
Does not properly send text delegate messages.

@item NSTextFieldCell:: [4]
Usability greatly depends upon backend implementation.

@item NSView:: [6] 
Maintains subview lists, notification of new
window, send resizing messages to subviews.  No rotation, scaling, or
translation of user coordinate space; coordinate conversion doesn't
take user coordinate space into affect, so everything is based upon
device coordinate space.  Event handling and tracking rectangles
implemented.  No scrolling capability.  No cursor management.  No
printing, paging, or postscript.

@item NSWindow:: [4]
Most methods not implemented, but maybe usable with backend implementation.

@item NSWorkspace:: [2]
Erich Boleyn has some initial ideas and design.
@end table

@section Protocols

@table @strong

@item NSChangeSpelling:: [0]

@item NSColorPickingCustom:: [0]

@item NSColorPickingDefault:: [0]

@item NSDraggingDestination:: [0]

@item NSDraggingInfo:: [0]

@item NSDraggingSource:: [0]

@item NSIgnoreMisspelledWords:: [0]

@item NSMenuActionResponder:: [0]

@item NSNibAwaking:: [0]

@item NSServicesRequests:: [0]

@end table

@section Functions

All of the functions have been moved to the backend.
