<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 0.6.5//EN" "http://www.gnustep.org/gsdoc-0_6_5.xml">
<gsdoc base="NSLayoutManager" prev="NSInputServer.html" next="NSMatrix.html" up="AppKit.html">
  <head>
    <title>NSLayoutManager</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org"/>
      <url url="http://www.gnustep.org/developers/whoiswho.html"/>
    </author>
    <version>0.1</version>
    <date>28 February, 2000</date>
  </head>
  <body>
    <chapter>
      <heading>NSLayoutManager</heading>
      <class name="NSLayoutManager" super="NSObject">
        <declared>AppKit/NSLayoutManager.h</declared>
        <conform>NSObject</conform>
        <desc>
        </desc>
        <method type="void"><sel>addTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>backgroundLayoutEnabled</sel>
        <desc>
        </desc>
</method>
        <method type="NSRect"><sel>boundingRectForGlyphRange:</sel><arg type="NSRange">glyphRange</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="unsignedint"><sel>characterIndexForGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="NSRange"><sel>characterRangeForGlyphRange:</sel><arg type="NSRange">glyphRange</arg><sel>actualGlyphRange:</sel><arg type="NSRange*">actualGlyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="id"><sel>delegate</sel>
        <desc>
        </desc>
</method>
        <method type="void"><sel>deleteGlyphsInRange:</sel><arg type="NSRange">glyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>drawBackgroundForGlyphRange:</sel><arg type="NSRange">glyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>drawGlyphsForGlyphRange:</sel><arg type="NSRange">glyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>drawsOutsideLineFragmentForGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>drawUnderlineForGlyphRange:</sel><arg type="NSRange">glyphRange</arg><sel>underlineType:</sel><arg type="int">underlineType</arg><sel>baselineOffset:</sel><arg type="float">baselineOffset</arg><sel>lineFragmentRect:</sel><arg type="NSRect">lineRect</arg><sel>lineFragmentGlyphRange:</sel><arg type="NSRange">lineGlyphRange</arg><sel>containerOrigin:</sel><arg type="NSPoint">containerOrigin</arg>
        <desc>
        </desc>
</method>
        <method type="NSRect"><sel>extraLineFragmentRect</sel>
        <desc>
        </desc>
</method>
        <method type="NSTextContainer*"><sel>extraLineFragmentTextContainer</sel>
        <desc>
        </desc>
</method>
        <method type="NSRect"><sel>extraLineFragmentUsedRect</sel>
        <desc>
        </desc>
</method>
        <method type="NSTextView*"><sel>firstTextView</sel>
        <desc>
        </desc>
</method>
        <method type="unsignedint"><sel>firstUnlaidCharacterIndex</sel>
        <desc>
        </desc>
</method>
        <method type="unsignedint"><sel>firstUnlaidGlyphIndex</sel>
        <desc>
        </desc>
</method>
        <method type="float"><sel>fractionOfDistanceThroughGlyphForPoint:</sel><arg type="NSPoint">aPoint</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>getFirstUnlaidCharacterIndex:</sel><arg type="unsignedint*">charIndex</arg><sel>glyphIndex:</sel><arg type="unsignedint*">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="unsignedint"><sel>getGlyphs:</sel><arg type="NSGlyph*">glyphArray</arg>
        <desc>
        </desc>
</method>
        <method type="NSGlyph"><sel>glyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="NSGlyph"><sel>glyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg><sel>isValidIndex:</sel><arg type="BOOL*">flag</arg>
        <desc>
        </desc>
</method>
        <method type="unsigned"><sel>glyphIndexForPoint:</sel><arg type="NSPoint">aPoint</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="unsignedint"><sel>glyphIndexForPoint:</sel><arg type="NSPoint">aPoint</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg><sel>fractionOfDistanceThroughGlyph:</sel><arg type="float*">partialFraction</arg>
        <desc>
        </desc>
</method>
        <method type="NSRange"><sel>glyphRangeForBoundingRect:</sel><arg type="NSRect">aRect</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="NSRange"><sel>glyphRangeForBoundingRectWithoutAdditionalLayout:</sel><arg type="NSRect">bounds</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">container</arg>
        <desc>
        </desc>
</method>
        <method type="NSRange"><sel>glyphRangeForCharacterRange:</sel><arg type="NSRange">charRange</arg><sel>actualCharacterRange:</sel><arg type="NSRange*">actualCharRange</arg>
        <desc>
        </desc>
</method>
        <method type="NSRange"><sel>glyphRangeForTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="float"><sel>hyphenationFactor</sel>
        <desc>
        </desc>
</method>
        <method type="id"><sel>init</sel>
        <desc>
        </desc>
</method>
        <method type="void"><sel>insertGlyph:</sel><arg type="NSGlyph">aGlyph</arg><sel>atGlyphIndex:</sel><arg type="unsignedint">glyphIndex</arg><sel>characterIndex:</sel><arg type="unsignedint">charIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>insertTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="int"><sel>intAttribute:</sel><arg type="int">attributeTag</arg><sel>forGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>invalidateDisplayForCharacterRange:</sel><arg type="NSRange">charRange</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>invalidateDisplayForGlyphRange:</sel><arg type="NSRange">glyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>invalidateGlyphsForCharacterRange:</sel><arg type="NSRange">charRange</arg><sel>changeInLength:</sel><arg type="int">lengthChange</arg><sel>actualCharacterRange:</sel><arg type="NSRange*">actualCharRange</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>invalidateLayoutForCharacterRange:</sel><arg type="NSRange">charRange</arg><sel>isSoft:(BOOL)flag actualCharacterRange:</sel><arg type="NSRange*">actualCharRange</arg>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>isValidGlyphIndex:</sel><arg type="unsigned">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>layoutManagerOwnsFirstResponderInWindow:</sel><arg type="NSWindow*">aWindow</arg>
        <desc>
        </desc>
</method>
        <method type="NSRect"><sel>lineFragmentRectForGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg><sel>effectiveRange:</sel><arg type="NSRange*">lineFragmentRange</arg>
        <desc>
        </desc>
</method>
        <method type="NSRect"><sel>lineFragmentUsedRectForGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg><sel>effectiveRange:</sel><arg type="NSRange*">lineFragmentRange</arg>
        <desc>
        </desc>
</method>
        <method type="NSPoint"><sel>locationForGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>notShownAttributeForGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="unsignedint"><sel>numberOfGlyphs</sel>
        <desc>
        </desc>
</method>
        <method type="NSRange"><sel>rangeOfNominallySpacedGlyphsContainingIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="NSRect*"><sel>rectArrayForCharacterRange:</sel><arg type="NSRange">charRange</arg><sel>withinSelectedCharacterRange:</sel><arg type="NSRange">selCharRange</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="NSRect*"><sel>rectArrayForGlyphRange:</sel><arg type="NSRange">glyphRange</arg><sel>withinSelectedGlyphRange:</sel><arg type="NSRange">selGlyphRange</arg><sel>inTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>removeTextContainerAtIndex:</sel><arg type="unsignedint">index</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>replaceGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>replaceTextStorage:</sel><arg type="NSTextStorage*">newTextStorage</arg>
        <desc>
        </desc>
</method>
        <method type="NSView*"><sel>rulerAccessoryViewForTextView:</sel><arg type="NSTextView*">aTextView</arg><sel>paragraphStyle:</sel><arg type="NSParagraphStyle*">paraStyle</arg><sel>ruler:(NSRulerView *)aRulerView enabled:</sel><arg type="BOOL">flag</arg>
        <desc>
        </desc>
</method>
        <method type="NSArray*"><sel>rulerMarkersForTextView:</sel><arg type="NSTextView*">aTextView</arg><sel>paragraphStyle:</sel><arg type="NSParagraphStyle*">paraStyle</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setBackgroundLayoutEnabled:</sel><arg type="BOOL">flag</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setCharacterIndex:</sel><arg type="unsignedint">charIndex</arg><sel>forGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setDelegate:</sel><arg type="id">anObject</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setDrawsOutsideLineFragment:</sel><arg type="BOOL">flag</arg><sel>forGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setExtraLineFragmentRect:</sel><arg type="NSRect">aRect</arg><sel>usedRect:</sel><arg type="NSRect">usedRect</arg><sel>textContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setHyphenationFactor:</sel><arg type="float">factor</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setIntAttribute:</sel><arg type="int">attributeTag</arg><sel>value:(int)anInt forGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setLineFragmentRect:</sel><arg type="NSRect">fragmentRect</arg><sel>forGlyphRange:</sel><arg type="NSRange">glyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setLocation:</sel><arg type="NSPoint">aPoint</arg><sel>forStartOfGlyphRange:</sel><arg type="NSRange">glyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setNotShownAttribute:</sel><arg type="BOOL">flag</arg><sel>forGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setShowsControlCharacters:</sel><arg type="BOOL">flag</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setShowsInvisibleCharacters:</sel><arg type="BOOL">flag</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setTextStorage:</sel><arg type="NSTextStorage*">textStorage</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>setUsesScreenFonts:</sel><arg type="BOOL">flag</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>showAttachmentCell:</sel><arg type="NSCell*">cell</arg><sel>inRect:</sel><arg type="NSRect">rect</arg><sel>characterIndex:</sel><arg type="unsigned">attachmentIndex;</arg>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>showsControlCharacters</sel>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>showsInvisibleCharacters</sel>
        <desc>
        </desc>
</method>
        <method type="NSFont*"><sel>substituteFontForFont:</sel><arg type="NSFont*">originalFont</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>textContainerChangedGeometry:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>textContainerChangedTextView:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="NSTextContainer*"><sel>textContainerForGlyphAtIndex:</sel><arg type="unsignedint">glyphIndex</arg><sel>effectiveRange:</sel><arg type="NSRange*">effectiveGlyphRange</arg>
        <desc>
        </desc>
</method>
        <method type="NSArray*"><sel>textContainers</sel>
        <desc>
        </desc>
</method>
        <method type="NSTextStorage*"><sel>textStorage</sel>
        <desc>
        </desc>
</method>
        <method type="void"><sel>textStorage:</sel><arg type="NSTextStorage*">aTextStorage</arg><sel>edited:(unsigned int)mask range:</sel><arg type="NSRange">range</arg><sel>changeInLength:</sel><arg type="int">lengthChange</arg><sel>invalidatedRange:</sel><arg type="NSRange">invalidatedCharRange</arg>
        <desc>
        </desc>
</method>
        <method type="NSTextView*"><sel>textViewForBeginningOfSelection</sel>
        <desc>
        </desc>
</method>
        <method type="void"><sel>underlineGlyphRange:</sel><arg type="NSRange">glyphRange</arg><sel>underlineType:</sel><arg type="int">underlineType</arg><sel>lineFragmentRect:</sel><arg type="NSRect">lineRect</arg><sel>lineFragmentGlyphRange:</sel><arg type="NSRange">lineGlyphRange</arg><sel>containerOrigin:</sel><arg type="NSPoint">containerOrigin</arg>
        <desc>
        </desc>
</method>
        <method type="NSRect"><sel>usedRectForTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="BOOL"><sel>usesScreenFonts</sel>
        <desc>
        </desc>
</method>
        <method type="void"><sel>layoutManager:</sel><arg type="NSLayoutManager*">aLayoutManager</arg><sel>didCompleteLayoutForTextContainer:</sel><arg type="NSTextContainer*">aTextContainer</arg>
        <desc>
        </desc>
</method>
        <method type="void"><sel>layoutManagerDidInvalidateLayout:</sel><arg type="NSLayoutManager*">aLayoutManager</arg>
        <desc>
        </desc>
</method>
      </class>
    </chapter>
  </body>
</gsdoc>
