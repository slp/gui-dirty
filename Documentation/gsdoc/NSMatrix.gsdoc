<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 0.6.7//EN" "http://www.gnustep.org/gsdoc-0_6_7.xml">
<gsdoc base="NSMatrix" next="NSMenu" prev="NSLayoutManager" up="NSActionCell">
  <head>
    <title>NSMatrix</title>
    <author name="Ovidiu Predescu">
      <email address="ovidiu@net-community.com">
        ovidiu@net-community.com
      </email>
    </author>
    <abstract>Matrix class for grouping controls</abstract>
    <copy>1996, 1997, 1999 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <chapter>
      <heading>
        Software documentation for the NSMatrix class
      </heading>
      <class name="NSMatrix" super="NSControl">
        <declared>AppKit/NSMatrix.h</declared>
        <conform>NSCoding</conform>
        <desc>
        </desc>
        <method type="Class" factory="yes">
          <sel>cellClass</sel>
          <desc>
          </desc>
        </method>
        <method type="void" factory="yes">
          <sel>setCellClass:</sel>
          <arg type="Class">classId</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>acceptsFirstMouse:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
          </desc>
        </method>
        <method type="SEL">
          <sel>action</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>addColumn</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>addColumnWithCells:</sel>
          <arg type="NSArray*">cellArray</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>addRow</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>addRowWithCells:</sel>
          <arg type="NSArray*">cellArray</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>allowsEmptySelection</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>autosizesCells</sel>
          <desc>
          </desc>
        </method>
        <method type="NSColor*">
          <sel>backgroundColor</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>cellAtRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="NSColor*">
          <sel>cellBackgroundColor</sel>
          <desc>
          </desc>
        </method>
        <method type="Class">
          <sel>cellClass</sel>
          <desc>
          </desc>
        </method>
        <method type="NSRect">
          <sel>cellFrameAtRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="NSSize">
          <sel>cellSize</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>cellWithTag:</sel>
          <arg type="int">anInt</arg>
          <desc>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>cells</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>delegate</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>deselectAllCells</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>deselectSelectedCell</sel>
          <desc>
          </desc>
        </method>
        <method type="SEL">
          <sel>doubleAction</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>drawCellAtRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>drawsBackground</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>drawsCellBackground</sel>
          <desc>
          </desc>
        </method>
        <method type="SEL">
          <sel>errorAction</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>getNumberOfRows:</sel>
          <arg type="int*">rowCount</arg>
          <sel>columns:</sel>
          <arg type="int*">columnCount</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>getRow:</sel>
          <arg type="int*">row</arg>
          <sel>column:</sel>
          <arg type="int*">column</arg>
          <sel>forPoint:</sel>
          <arg type="NSPoint">point</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>getRow:</sel>
          <arg type="int*">row</arg>
          <sel>column:</sel>
          <arg type="int*">column</arg>
          <sel>ofCell:</sel>
          <arg type="NSCell*">aCell</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>highlightCell:</sel>
          <arg type="BOOL">flag</arg>
          <sel>atRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>initWithFrame:</sel>
          <arg type="NSRect">frameRect</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>initWithFrame:</sel>
          <arg type="NSRect">frameRect</arg>
          <sel>mode:</sel>
          <arg type="int">aMode</arg>
          <sel>cellClass:</sel>
          <arg type="Class">class</arg>
          <sel>numberOfRows:</sel>
          <arg type="int">rowsHigh</arg>
          <sel>numberOfColumns:</sel>
          <arg type="int">colsWide</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>initWithFrame:</sel>
          <arg type="NSRect">frameRect</arg>
          <sel>mode:</sel>
          <arg type="int">aMode</arg>
          <sel>prototype:</sel>
          <arg type="NSCell*">prototype</arg>
          <sel>numberOfRows:</sel>
          <arg type="int">rowsHigh</arg>
          <sel>numberOfColumns:</sel>
          <arg type="int">colsWide</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>insertColumn:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>insertColumn:</sel>
          <arg type="int">column</arg>
          <sel>withCells:</sel>
          <arg type="NSArray*">cellArray</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>insertRow:</sel>
          <arg type="int">row</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>insertRow:</sel>
          <arg type="int">row</arg>
          <sel>withCells:</sel>
          <arg type="NSArray*">cellArray</arg>
          <desc>
          </desc>
        </method>
        <method type="NSSize">
          <sel>intercellSpacing</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isAutoscroll</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isSelectionByRect</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>keyCell</sel>
          <desc>
          </desc>
        </method>
        <method type="NSCell*">
          <sel>makeCellAtRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="NSMatrixMode">
          <sel>mode</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>mouseDown:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
          </desc>
        </method>
        <method type="int">
          <sel>mouseDownFlags</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>nextText</sel>
          <desc>
          </desc>
        </method>
        <method type="int">
          <sel>numberOfColumns</sel>
          <desc>
          </desc>
        </method>
        <method type="int">
          <sel>numberOfRows</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>performKeyEquivalent:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>previousText</sel>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>prototype</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>putCell:</sel>
          <arg type="NSCell*">newCell</arg>
          <sel>atRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>removeColumn:</sel>
          <arg type="int">col</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>removeRow:</sel>
          <arg type="int">row</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>renewRows:</sel>
          <arg type="int">r</arg>
          <sel>columns:</sel>
          <arg type="int">c</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>resetCursorRects</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>scrollCellToVisibleAtRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>selectAll:</sel>
          <arg type="id">sender</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>selectCellAtRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>selectCellWithTag:</sel>
          <arg type="int">anInt</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>selectText:</sel>
          <arg type="id">sender</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>selectTextAtRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="id">
          <sel>selectedCell</sel>
          <desc>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>selectedCells</sel>
          <desc>
          </desc>
        </method>
        <method type="int">
          <sel>selectedColumn</sel>
          <desc>
          </desc>
        </method>
        <method type="int">
          <sel>selectedRow</sel>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>sendAction</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>sendAction:</sel>
          <arg type="SEL">aSelector</arg>
          <sel>to:</sel>
          <arg type="id">anObject</arg>
          <sel>forAllCells:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>sendDoubleAction</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setAction:</sel>
          <arg type="SEL">sel</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setAllowsEmptySelection:</sel>
          <arg type="BOOL">f</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setAutoscroll:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setAutosizesCells:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setBackgroundColor:</sel>
          <arg type="NSColor*">c</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setCellBackgroundColor:</sel>
          <arg type="NSColor*">c</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setCellClass:</sel>
          <arg type="Class">class</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setCellSize:</sel>
          <arg type="NSSize">size</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setDelegate:</sel>
          <arg type="id">object</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setDoubleAction:</sel>
          <arg type="SEL">sel</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setDrawsBackground:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setDrawsCellBackground:</sel>
          <arg type="BOOL">f</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setErrorAction:</sel>
          <arg type="SEL">sel</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setIntercellSpacing:</sel>
          <arg type="NSSize">size</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setKeyCell:</sel>
          <arg type="NSCell*">aCell</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setMode:</sel>
          <arg type="NSMatrixMode">aMode</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setNextText:</sel>
          <arg type="id">anObject</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setPreviousText:</sel>
          <arg type="id">anObject</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setPrototype:</sel>
          <arg type="NSCell*">aCell</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setScrollable:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setSelectionByRect:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setSelectionFrom:</sel>
          <arg type="int">startPos</arg>
          <sel>to:</sel>
          <arg type="int">endPos</arg>
          <sel>anchor:</sel>
          <arg type="int">anchorPos</arg>
          <sel>highlight:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setState:</sel>
          <arg type="int">value</arg>
          <sel>atRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setTabKeyTraversesCells:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setValidateSize:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>sizeToCells</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>sortUsingFunction:</sel>
          <arg type="int (*)(id element1,id element2,void*userData)">comparator</arg>
          <sel>context:</sel>
          <arg type="void*">context</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>sortUsingSelector:</sel>
          <arg type="SEL">comparator</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>tabKeyTraversesCells</sel>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>textDidBeginEditing:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>textDidChange:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>textDidEndEditing:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>textShouldBeginEditing:</sel>
          <arg type="NSText*">textObject</arg>
          <desc>
          </desc>
        </method>
        <method type="BOOL">
          <sel>textShouldEndEditing:</sel>
          <arg type="NSText*">aTextObject</arg>
          <desc>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
