<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 0.6.7//EN" "http://www.gnustep.org/gsdoc-0_6_7.xml">
<gsdoc base="NSView" up="Gui">
  <head>
    <title>NSView</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <author name="Felipe A. Rodriguez">
      <email address="far@ix.netcom.com">
        far@ix.netcom.com
      </email>
    </author>
    <author name="Ovidiu Predescu">
      <email address="ovidiu@net-community.com">
        ovidiu@net-community.com
      </email>
    </author>
    <author name="Richard Frith-Macdonald">
      <email address="richard@brainstorm.co.uk">
        richard@brainstorm.co.uk
      </email>
    </author>
    <abstract>
      The view class which encapsulates all drawing functionality
    </abstract>
    <copy>(C) 1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>NSView</heading>
      <p>
        NSView is an abstract class which provides facilities
        for drawing in a window and receiving events. It is the
        superclass of many of the visual elements of the
        GUI.
      </p>
      <p>
        In order to display itself, a view must be placed in a
        window (represented by an NSWindow object). Within the
        window is a hierarchy of NSViews, headed by the window's
        content view. Every other view in a window is a
        descendant of this view.
      </p>
      <p>
        Subclasses can override <code>drawRect:</code> in
        order to implement their appearance. Other methods of
        NSView and NSResponder can also be overridden to handle
        user generated events.
      </p>
      <class name="NSView" super="NSResponder">
        <declared>AppKit/NSView.h</declared>
        <desc>
        </desc>
        <method type="NSMenu*" factory="yes">
          <sel>defaultMenu</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*" factory="yes">
          <sel>focusView</sel>
          <desc>
            Return the view at the top of graphics contexts
            stack or <code>nil</code> if none is focused.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>acceptsFirstMouse:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            Returns <code>YES</code> if the view object will
            accept the first click received when in an inactive
            window, and <code>NO</code> otherwise.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>addCursorRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>cursor:</sel>
          <arg type="NSCursor*">anObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>addSubview:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            Adds <var>aView</var> as a subview of the receiver.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>addSubview:</sel>
          <arg type="NSView*">aView</arg>
          <sel>positioned:</sel>
          <arg type="NSWindowOrderingMode">place</arg>
          <sel>relativeTo:</sel>
          <arg type="NSView*">otherView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>addToPageSetup</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSToolTipTag">
          <sel>addToolTipRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>owner:</sel>
          <arg type="id">anObject</arg>
          <sel>userData:</sel>
          <arg type="void*">data</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSTrackingRectTag">
          <sel>addTrackingRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>owner:</sel>
          <arg type="id">anObject</arg>
          <sel>userData:</sel>
          <arg type="void*">data</arg>
          <sel>assumeInside:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>adjustPageHeightNew:</sel>
          <arg type="float*">newBottom</arg>
          <sel>top:</sel>
          <arg type="float">oldTop</arg>
          <sel>bottom:</sel>
          <arg type="float">oldBottom</arg>
          <sel>limit:</sel>
          <arg type="float">bottomLimit</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>adjustPageWidthNew:</sel>
          <arg type="float*">newRight</arg>
          <sel>left:</sel>
          <arg type="float">oldLeft</arg>
          <sel>right:</sel>
          <arg type="float">oldRight</arg>
          <sel>limit:</sel>
          <arg type="float">rightLimit</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>adjustScroll:</sel>
          <arg type="NSRect">newVisible</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>allocateGState</sel>
          <desc>
            <p>
              Tell the view to maintain a private gstate object
              which encapsulates all the information about
              drawing, such as coordinate transforms, line
              widths, etc. If you do not invoke this method, a
              gstate object is constructed each time the view is
              lockFocused. Allocating a private gstate may
              improve the performance of views that are focused
              a lot and have a lot of customized drawing parameters.
            </p>
            <p>
              View subclasses should override the setUpGstate
              method to set these custom parameters.
            </p>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>ancestorSharedWithView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            Returns <code>self</code> if <var>aView</var> is
            the receiver or <var>aView</var> is a subview of the
            receiver, the ancestor view shared by
            <var>aView</var> and the receiver, if any,
            <var>aView</var> if it is an ancestor of the
            receiver, otherwise returns <code>nil</code>.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>autoresizesSubviews</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="unsigned int">
          <sel>autoresizingMask</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>autoscroll:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginDocument</sel>
          <desc>
            Writes header and job information for the PostScript
            document. This includes at a minimum, PostScript
            header information. It may also include job setup
            information if the output is intended for a
            printer (i.e. not an EPS file). Most of the
            information for writing the header comes from
            the NSPrintOperation and NSPrintInfo objects associated
            with the current print operation. There isn't normally
            anything that the program needs to override at the
            beginning of a document, although if there is
            additional setup that needs to be done, you can
            override the NSView's methods endHeaderComments,
            endPrologue, beginSetup, and/or endSetup. This
            method calls the above methods in the listed order
            before or after writing the required information.
            For an EPS operation, the beginSetup and endSetup
            methods aren't used.
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginPage:</sel>
          <arg type="int">ordinalNum</arg>
          <sel>label:</sel>
          <arg type="NSString*">aString</arg>
          <sel>bBox:</sel>
          <arg type="NSRect">pageRect</arg>
          <sel>fonts:</sel>
          <arg type="NSString*">fontNames</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginPageInRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>atPlacement:</sel>
          <arg type="NSPoint">location</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginPageSetupRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>placement:</sel>
          <arg type="NSPoint">location</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginPrologueBBox:</sel>
          <arg type="NSRect">bBox</arg>
          <sel>creationDate:</sel>
          <arg type="NSString*">dateCreated</arg>
          <sel>createdBy:</sel>
          <arg type="NSString*">anApplication</arg>
          <sel>fonts:</sel>
          <arg type="NSString*">fontNames</arg>
          <sel>forWhom:</sel>
          <arg type="NSString*">user</arg>
          <sel>pages:</sel>
          <arg type="int">numPages</arg>
          <sel>title:</sel>
          <arg type="NSString*">aTitle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginSetup</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginTrailer</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>bounds</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="float">
          <sel>boundsRotation</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>canDraw</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>centerScanRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSPoint">
          <sel>convertPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <sel>fromView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSPoint">
          <sel>convertPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <sel>toView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>convertRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>fromView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>convertRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>toView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSSize">
          <sel>convertSize:</sel>
          <arg type="NSSize">aSize</arg>
          <sel>fromView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSSize">
          <sel>convertSize:</sel>
          <arg type="NSSize">aSize</arg>
          <sel>toView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSData*">
          <sel>dataWithEPSInsideRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSData*">
          <sel>dataWithPDFInsideRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>didAddSubview:</sel>
          <arg type="NSView*">subview</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>discardCursorRects</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>display</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>displayIfNeeded</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>displayIfNeededIgnoringOpacity</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>displayIfNeededInRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>displayIfNeededInRectIgnoringOpacity:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>displayRect:</sel>
          <arg type="NSRect">rect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>displayRectIgnoringOpacity:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>dragFile:</sel>
          <arg type="NSString*">filename</arg>
          <sel>fromRect:</sel>
          <arg type="NSRect">rect</arg>
          <sel>slideBack:</sel>
          <arg type="BOOL">slideFlag</arg>
          <sel>event:</sel>
          <arg type="NSEvent*">event</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>dragImage:</sel>
          <arg type="NSImage*">anImage</arg>
          <sel>at:</sel>
          <arg type="NSPoint">viewLocation</arg>
          <sel>offset:</sel>
          <arg type="NSSize">initialOffset</arg>
          <sel>event:</sel>
          <arg type="NSEvent*">event</arg>
          <sel>pasteboard:</sel>
          <arg type="NSPasteboard*">pboard</arg>
          <sel>source:</sel>
          <arg type="id">sourceObject</arg>
          <sel>slideBack:</sel>
          <arg type="BOOL">slideFlag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>drawPageBorderWithSize:</sel>
          <arg type="NSSize">borderSize</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>drawRect:</sel>
          <arg type="NSRect">rect</arg>
          <desc>
            This method is invoked to handle drawing inside the
            view. The default NSView's implementation does
            nothing; subclasses might override it to draw
            something inside the view. Since NSView's
            implementation is guaranteed to be empty,
            you should not call super's implementation when you
            override it in subclasses. drawRect: is invoked
            when the focus has already been locked on the view;
            you can use arbitrary postscript functions in drawRect:
            to draw inside your view; the coordinate system in which
            you draw is the view's own coordinate system (this
            means for example that you should refer to the
            rectangle covered by the view using its bounds,
            and not its frame). The argument of drawRect: is the
            rectangle which needs to be redrawn. In a lossy
            implementation, you can ignore the argument
            and redraw the whole view; if you are aiming at
            performance, you may want to redraw only what
            is inside the rectangle which needs to be redrawn; this
            usually improves drawing performance considerably.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>drawSheetBorderWithSize:</sel>
          <arg type="NSSize">borderSize</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSScrollView*">
          <sel>enclosingScrollView</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endDocument</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endHeaderComments</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endPage</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endPageSetup</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endPrologue</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endSetup</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endTrailer</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>fax:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>frame</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="float">
          <sel>frameRotation</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="int">
          <sel>gState</sel>
          <desc>
            Returns an identifier that represents the view's
            gstate object, which is used to encapsulate drawing
            information about the view. Most of the time a
            gstate object is created from scratch when the view
            is focused, so if the view is not currently focused or
            allocateGState has not been called, then
            this method will
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="float">
          <sel>heightAdjustLimit</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>hitTest:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            Returns the subview, lowest in the receiver's
            hierarchy, which contains <var>aPoint</var>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>initWithFrame:</sel>
          <arg type="NSRect">frameRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isDescendantOf:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            Returns <code>YES</code> if <var>aView</var> is an
            ancestor of the receiver.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isFlipped</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isOpaque</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isRotatedFromBase</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isRotatedOrScaledFromBase</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>knowsPageRange:</sel>
          <arg type="NSRange*">range</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>knowsPagesFirst:</sel>
          <arg type="int*">firstPageNum</arg>
          <sel>last:</sel>
          <arg type="int*">lastPageNum</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSPoint">
          <sel>locationOfPrintRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>lockFocus</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>lockFocusIfCanDraw</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSMenu*">
          <sel>menuForEvent:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>mouse:</sel>
          <arg type="NSPoint">aPoint</arg>
          <sel>inRect:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            Returns whether or not <var>aPoint</var> lies
            within <var>aRect</var>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>needsDisplay</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>nextKeyView</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>nextValidKeyView</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>opaqueAncestor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>performKeyEquivalent:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>performMnemonic:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>postsBoundsChangedNotifications</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>postsFrameChangedNotifications</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>previousKeyView</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>previousValidKeyView</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>print:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSString*">
          <sel>printJobTitle</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>rectForPage:</sel>
          <arg type="int">page</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>reflectScrolledClipView:</sel>
          <arg type="NSClipView*">aClipView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>registerForDraggedTypes:</sel>
          <arg type="NSArray*">types</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>releaseGState</sel>
          <desc>
            Frees the gstate object, if there is one. Note that
            the next time the view is lockFocused, the gstate will
            be allocated again.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>removeAllToolTips</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>removeCursorRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>cursor:</sel>
          <arg type="NSCursor*">anObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>removeFromSuperview</sel>
          <desc>
            <p>
              Removes the receiver from its superviews list of
              subviews, by invoking the superviews [
              <ref type="method" id="-removeSubview:">
                -removeSubview:
              </ref>
              ] method, and marks the rectangle that the reciever
              occupied in the superview as needing redisplay.
            </p>
            <p>
              This is dangerous to use during display, since it
              alters the rectangles needing display. In this
              case, you can use the
              <ref type="method" id="-removeFromSuperviewWithoutNeedingDisplay">-removeFromSuperviewWithoutNeedingDisplay</ref> method instead.
            </p>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>removeFromSuperviewWithoutNeedingDisplay</sel>
          <desc>
            Removes the receiver from its superviews list of
            subviews, by invoking the superviews [
            <ref type="method" id="-removeSubview:">
              -removeSubview:
            </ref>
            ] method.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>removeSubview:</sel>
          <arg type="NSView*">aSubview</arg>
          <desc>
            <p>
              Removes <var>aSubview</var> from the receivers
              list of subviews and from the responder chain.
            </p>
            <p>
              Also invokes [aView
              <ref type="method" id="-viewWillMoveToWindow:">
                -viewWillMoveToWindow:
              </ref>
              <code>nil</code>] to handle removal of aView (and
              recursively, its children) from its window -
              performing tidyup by invalidating cursor rects
              etc.
            </p>
          </desc>
          <standards>
            <NotMacOS-X /> <NotOpenStep />
          </standards>
        </method>
        <method type="void">
          <sel>removeToolTip:</sel>
          <arg type="NSToolTipTag">tag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>removeTrackingRect:</sel>
          <arg type="NSTrackingRectTag">tag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>renewGState</sel>
          <desc>
            Invalidates the view's gstate object so it will
            be set up again using setUpGState the next time the view
            is focused.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>replaceSubview:</sel>
          <arg type="NSView*">oldView</arg>
          <sel>with:</sel>
          <arg type="NSView*">newView</arg>
          <desc>
            Removes <var>oldView</var> from the receiver and
            places <var>newView</var> in its place.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>resetCursorRects</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>resizeSubviewsWithOldSize:</sel>
          <arg type="NSSize">oldSize</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>resizeWithOldSuperviewSize:</sel>
          <arg type="NSSize">oldSize</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>rotateByAngle:</sel>
          <arg type="float">angle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>scaleUnitSquareToSize:</sel>
          <arg type="NSSize">newSize</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>scrollClipView:</sel>
          <arg type="NSClipView*">aClipView</arg>
          <sel>toPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>scrollPoint:</sel>
          <arg type="NSPoint">aPoint</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>scrollRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>by:</sel>
          <arg type="NSSize">delta</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>scrollRectToVisible:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setAutoresizesSubviews:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setAutoresizingMask:</sel>
          <arg type="unsigned int">mask</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setBounds:</sel>
          <arg type="NSRect">aRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setBoundsOrigin:</sel>
          <arg type="NSPoint">newOrigin</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setBoundsRotation:</sel>
          <arg type="float">angle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setBoundsSize:</sel>
          <arg type="NSSize">newSize</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setFrame:</sel>
          <arg type="NSRect">frameRect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setFrameOrigin:</sel>
          <arg type="NSPoint">newOrigin</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setFrameRotation:</sel>
          <arg type="float">angle</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setFrameSize:</sel>
          <arg type="NSSize">newSize</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setNeedsDisplay:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setNeedsDisplayInRect:</sel>
          <arg type="NSRect">rect</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setNextKeyView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setPostsBoundsChangedNotifications:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setPostsFrameChangedNotifications:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setPreviousKeyView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setToolTip:</sel>
          <arg type="NSString*">string</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setUpGState</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>shouldDelayWindowOrderingForEvent:</sel>
          <arg type="NSEvent*">anEvent</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>shouldDrawColor</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>sortSubviewsUsingFunction:</sel>
          <arg type="int(*)(id,id,void*)">compare</arg>
          <sel>context:</sel>
          <arg type="void*">context</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSArray*">
          <sel>subviews</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSView*">
          <sel>superview</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="int">
          <sel>tag</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSString*">
          <sel>toolTip</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>translateOriginToPoint:</sel>
          <arg type="NSPoint">point</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>unlockFocus</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>unregisterDraggedTypes</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>viewDidMoveToSuperview</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>viewDidMoveToWindow</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>viewWillMoveToSuperview:</sel>
          <arg type="NSView*">newSuper</arg>
          <desc>
            Notifies the receiver that its superview is being
            changed to <var>newSuperview</var>.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>viewWillMoveToWindow:</sel>
          <arg type="NSWindow*">newWindow</arg>
          <desc>
            Notifies the receiver that it will now be a view
            of <var>newWindow</var>. Note, this method is also used
            when removing a view from a window (in which case,
            <var>newWindow</var> is <code>nil</code>) to let all
            the subviews know that they have also been removed from
            the window.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>viewWithTag:</sel>
          <arg type="int">aTag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSRect">
          <sel>visibleRect</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="float">
          <sel>widthAdjustLimit</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>willRemoveSubview:</sel>
          <arg type="NSView*">subview</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSWindow*">
          <sel>window</sel>
          <desc>
            Returns the window in which the receiver resides.
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>writeEPSInsideRect:</sel>
          <arg type="NSRect">rect</arg>
          <sel>toPasteboard:</sel>
          <arg type="NSPasteboard*">pasteboard</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>writePDFInsideRect:</sel>
          <arg type="NSRect">aRect</arg>
          <sel>toPasteboard:</sel>
          <arg type="NSPasteboard*">pboard</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <standards>
          <MacOS-X /> <OpenStep /> <GNUstep />
        </standards>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSView(PrivateMethods)
        category
      </heading>
      <category name="PrivateMethods" class="NSView">
        <declared>AppKit/NSView.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void">
          <sel>_invalidateCoordinates</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="NSAffineTransform*">
          <sel>_matrixFromWindow</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="NSAffineTransform*">
          <sel>_matrixToWindow</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>_rebuildCoordinates</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <standards>
          <NotOpenStep /> <NotMacOS-X /> <GNUstep />
        </standards>
      </category>
    </chapter>
  </body>
</gsdoc>
