<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 0.6.7//EN" "http://www.gnustep.org/gsdoc-0_6_7.xml">
<gsdoc base="NSApplication" up="Gui">
  <head>
    <title>NSApplication</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <author name="Felipe A. Rodriguez">
      <email address="far@ix.netcom.com">
        far@ix.netcom.com
      </email>
    </author>
    <author name="Richard Frith-Macdonald">
      <email address="richard@brainstorm.co.uk">
        richard@brainstorm.co.uk
      </email>
    </author>
    <abstract>The one and only application class</abstract>
    <copy>1996,1999 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSApplication class
      </heading>
      <class name="NSApplication" super="NSResponder">
        <declared>AppKit/NSApplication.h</declared>
        <conform>NSCoding</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="void" factory="yes">
          <sel>detachDrawingThread:</sel>
          <arg type="SEL">selector</arg>
          <sel>toTarget:</sel>
          <arg type="id">target</arg>
          <sel>withObject:</sel>
          <arg type="id">argument</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSApplication*" factory="yes">
          <sel>sharedApplication</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>abortModal</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>activateIgnoringOtherApps:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>addWindowsItem:</sel>
          <arg type="NSWindow*">aWindow</arg>
          <sel>title:</sel>
          <arg type="NSString*">aString</arg>
          <sel>filename:</sel>
          <arg type="BOOL">isFilename</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSImage*">
          <sel>applicationIconImage</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>arrangeInFront:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSModalSession">
          <sel>beginModalSessionForWindow:</sel>
          <arg type="NSWindow*">theWindow</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>beginSheet:</sel>
          <arg type="NSWindow*">sheet</arg>
          <sel>modalForWindow:</sel>
          <arg type="NSWindow*">docWindow</arg>
          <sel>modalDelegate:</sel>
          <arg type="id">modalDelegate</arg>
          <sel>didEndSelector:</sel>
          <arg type="SEL">didEndSelector</arg>
          <sel>contextInfo:</sel>
          <arg type="void*">contextInfo</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>changeWindowsItem:</sel>
          <arg type="NSWindow*">aWindow</arg>
          <sel>title:</sel>
          <arg type="NSString*">aString</arg>
          <sel>filename:</sel>
          <arg type="BOOL">isFilename</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSGraphicsContext*">
          <sel>context</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSEvent*">
          <sel>currentEvent</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>deactivate</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>delegate</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>discardEventsMatchingMask:</sel>
          <arg type="unsigned int">mask</arg>
          <sel>beforeEvent:</sel>
          <arg type="NSEvent*">lastEvent</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>encodeWithCoder:</sel>
          <arg type="NSCoder*">aCoder</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endModalSession:</sel>
          <arg type="NSModalSession">theSession</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endSheet:</sel>
          <arg type="NSWindow*">sheet</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>endSheet:</sel>
          <arg type="NSWindow*">sheet</arg>
          <sel>returnCode:</sel>
          <arg type="int">returnCode</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>finishLaunching</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>hide:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>hideOtherApplications:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>initWithCoder:</sel>
          <arg type="NSCoder*">aDecoder</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isActive</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isHidden</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>isRunning</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSWindow*">
          <sel>keyWindow</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSMenu*">
          <sel>mainMenu</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSWindow*">
          <sel>mainWindow</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSWindow*">
          <sel>makeWindowsPerform:</sel>
          <arg type="SEL">aSelector</arg>
          <sel>inOrder:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>miniaturizeAll:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSWindow*">
          <sel>modalWindow</sel>
          <desc>
            <p>
              Returns the window that is part of the current
              modal session, if any. <p></p> See
              <ref type="method" id="-runModalForWindow:">
                -runModalForWindow:
              </ref>
            </p>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSEvent*">
          <sel>nextEventMatchingMask:</sel>
          <arg type="unsigned int">mask</arg>
          <sel>untilDate:</sel>
          <arg type="NSDate*">expiration</arg>
          <sel>inMode:</sel>
          <arg type="NSString*">mode</arg>
          <sel>dequeue:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>orderFrontColorPanel:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>orderFrontDataLinkPanel:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>orderFrontHelpPanel:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>orderFrontStandardAboutPanel:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>orderFrontStandardAboutPanelWithOptions:</sel>
          <arg type="NSDictionary*">dictionary</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>orderFrontStandardInfoPanel:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>orderFrontStandardInfoPanelWithOptions:</sel>
          <arg type="NSDictionary*">dictionary</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>postEvent:</sel>
          <arg type="NSEvent*">event</arg>
          <sel>atStart:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>preventWindowOrdering</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>registerServicesMenuSendTypes:</sel>
          <arg type="NSArray*">sendTypes</arg>
          <sel>returnTypes:</sel>
          <arg type="NSArray*">returnTypes</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>removeWindowsItem:</sel>
          <arg type="NSWindow*">aWindow</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>reportException:</sel>
          <arg type="NSException*">anException</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>run</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="int">
          <sel>runModalForWindow:</sel>
          <arg type="NSWindow*">theWindow</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="int">
          <sel>runModalForWindow:</sel>
          <arg type="NSWindow*">theWindow</arg>
          <sel>relativeToWindow:</sel>
          <arg type="NSWindow*">docWindow</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="int">
          <sel>runModalSession:</sel>
          <arg type="NSModalSession">theSession</arg>
          <desc>
            <p>
              Processes one event for a modal session
              described by the <var>theSession</var>
              variable. Before processing the event, it makes
              the session window key and orders the window front,
              so there is no need to do this separately. When
              finished, it returns the state of the session
              (i.e. whether it is still running or has been
              stopped, etc) <p></p> See Also:
              <ref type="method" id="-runModalForWindow:">
                -runModalForWindow:
              </ref>
            </p>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>runPageLayout:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>sendAction:</sel>
          <arg type="SEL">aSelector</arg>
          <sel>to:</sel>
          <arg type="id">aTarget</arg>
          <sel>from:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>sendEvent:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSMenu*">
          <sel>servicesMenu</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>servicesProvider</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setAppleMenu:</sel>
          <arg type="NSMenu*">aMenu</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setApplicationIconImage:</sel>
          <arg type="NSImage*">anImage</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setDelegate:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setMainMenu:</sel>
          <arg type="NSMenu*">aMenu</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setServicesMenu:</sel>
          <arg type="NSMenu*">aMenu</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setServicesProvider:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setWindowsMenu:</sel>
          <arg type="NSMenu*">aMenu</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>setWindowsNeedUpdate:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>stop:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>stopModal</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>stopModalWithCode:</sel>
          <arg type="int">returnCode</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>targetForAction:</sel>
          <arg type="SEL">aSelector</arg>
          <desc>
            <p>
              Returns the target object that will respond to
              <var>aSelector</var>, if any. The method first
              checks if any of the key window's first
              responders, the key window or its delegate
              responds. Next it checks the main window in the
              same way. Finally it checks the receiver
              (NSApplication) and it's delegate.
            </p>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>targetForAction:</sel>
          <arg type="SEL">theAction</arg>
          <sel>to:</sel>
          <arg type="id">theTarget</arg>
          <sel>from:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>terminate:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>tryToPerform:</sel>
          <arg type="SEL">aSelector</arg>
          <sel>with:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>unhide:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>unhideAllApplications:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <NotOpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>unhideWithoutActivation</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>updateWindows</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>updateWindowsItem:</sel>
          <arg type="NSWindow*">aWindow</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="id">
          <sel>validRequestorForSendType:</sel>
          <arg type="NSString*">sendType</arg>
          <sel>returnType:</sel>
          <arg type="NSString*">returnType</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSWindow*">
          <sel>windowWithWindowNumber:</sel>
          <arg type="int">windowNum</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSArray*">
          <sel>windows</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="NSMenu*">
          <sel>windowsMenu</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <standards>
          <MacOS-X /> <OpenStep /> <GNUstep />
        </standards>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(NSServicesRequests)
        informal protocol
      </heading>
      <category name="NSServicesRequests" class="NSObject">
        <declared>AppKit/NSApplication.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="NSWindow*">
          <sel>iconWindow</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>readSelectionFromPasteboard:</sel>
          <arg type="NSPasteboard*">pboard</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>writeSelectionToPasteboard:</sel>
          <arg type="NSPasteboard*">pboard</arg>
          <sel>types:</sel>
          <arg type="NSArray*">types</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <MacOS-X /> <OpenStep /> <GNUstep />
          </standards>
        </method>
        <standards>
          <MacOS-X /> <OpenStep /> <GNUstep />
        </standards>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the GSAppDelegateProtocol
        protocol
      </heading>
      <protocol name="GSAppDelegateProtocol">
        <declared>AppKit/NSApplication.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="BOOL">
          <sel>application:</sel>
          <arg type="NSApplication*">app</arg>
          <sel>openFile:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>application:</sel>
          <arg type="NSApplication*">app</arg>
          <sel>openFileWithoutUI:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>application:</sel>
          <arg type="NSApplication*">app</arg>
          <sel>openTempFile:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>application:</sel>
          <arg type="NSApplication*">theApplication</arg>
          <sel>printFile:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationDidBecomeActive:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationDidFinishLaunching:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationDidHide:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationDidResignActive:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationDidUnhide:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationDidUpdate:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>applicationOpenUntitledFile:</sel>
          <arg type="NSApplication*">app</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>applicationShouldOpenUntitledFile:</sel>
          <arg type="NSApplication*">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>applicationShouldTerminate:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="BOOL">
          <sel>applicationShouldTerminateAfterLastWindowClosed:</sel>
          <arg type="id">sender</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationWillBecomeActive:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationWillFinishLaunching:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationWillHide:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationWillResignActive:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationWillTerminate:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationWillUnhide:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <method type="void">
          <sel>applicationWillUpdate:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
          <standards>
            <NotOpenStep /> <NotMacOS-X /> <GNUstep />
          </standards>
        </method>
        <standards>
          <NotOpenStep /> <NotMacOS-X /> <GNUstep />
        </standards>
      </protocol>
    </chapter>
  </body>
</gsdoc>
