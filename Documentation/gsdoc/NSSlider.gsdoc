<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 0.6.7//EN" "http://www.gnustep.org/gsdoc-0_6_7.xml">
<gsdoc base="NSSlider" next="NSSliderCell" prev="NSPrintOperation" up="NSDocumentController">
  <head>
    <title>NSSlider</title>
    <author name="Ovidiu Predescu">
      <email address="ovidiu@net-community.com">
        ovidiu@net-community.com
      </email>
    </author>
    <author name="Felipe A. Rodriguez">
      <email address="far@ix.netcom.com">
        far@ix.netcom.com
      </email>
    </author>
    <copy>1996 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <chapter>
      <heading>Class Description</heading>
      <p>
        An NSSlider displays, and allows control of, some value in
        the application. It represents a continuous stream of
        values of type <code>float</code>, which can be
        retrieved by the method <code>floatValue</code> and
        set by the method <code>setFloatValue:</code>.
      </p>
      <p>
        This control is a continuous control. It sends its action
        message as long as the user is manipulating it. This
        can be changed by passing <code>NO</code> to the
        <code>setContinuous:</code> message of a given NSSlider.
      </p>
      <p>
        Although methods for adding and managing a title are
        provided, the slider's knob can cover this title, so
        it is recommended that a label be added near the slider, for
        identification.
      </p>
      <p>
        As with many controls, NSSlider relies on its cell
        counterpart, NSSliderCell. For more information,
        please see the specification for NSSliderCell.
      </p>
      <p>
        Use of an NSSlider to do the role of an NSScroller is not
        recommended. A scroller is intended to represent
        the visible portion of a view, whereas a slider is intended
        to represent some value.
      </p>
      <class name="NSSlider" super="NSControl">
        <declared>AppKit/NSSlider.h</declared>
        <desc>
        </desc>
        <method type="BOOL">
          <sel>acceptsFirstMouse:</sel>
          <arg type="NSEvent*">theEvent</arg>
          <desc>
            Returns <code>YES</code> by default. This will
            allow the first click sent to the slider, when in an
            inactive window, to both bring the window into
            focus and manipulate the slider.
          </desc>
        </method>
        <method type="BOOL">
          <sel>allowsTickMarkValuesOnly</sel>
          <desc>
          </desc>
        </method>
        <method type="double">
          <sel>altIncrementValue</sel>
          <desc>
            Returns the value by which the slider will be
            incremented if the user holds down the ALT key.
          </desc>
        </method>
        <method type="double">
          <sel>closestTickMarkValueToValue:</sel>
          <arg type="double">aValue</arg>
          <desc>
          </desc>
        </method>
        <method type="NSImage*">
          <sel>image</sel>
          <desc>
            Returns the image drawn in the slider's track.
            Returns <code>nil</code> if this has not been set.
          </desc>
        </method>
        <method type="int">
          <sel>indexOfTickMarkAtPoint:</sel>
          <arg type="NSPoint">point</arg>
          <desc>
          </desc>
        </method>
        <method type="int">
          <sel>isVertical</sel>
          <desc>
            Returns whether or not the slider is vertical. If,
            for some reason, this cannot be determined, for such
            reasons as the slider is not yet displayed, this
            method returns -1. Generally, a slider is considered
            vertical if its height is greater than its width.
          </desc>
        </method>
        <method type="float">
          <sel>knobThickness</sel>
          <desc>
            Returns the thickness of the slider's knob. This
            value is in pixels, and is the size of the knob along
            the slider's track.
          </desc>
        </method>
        <method type="double">
          <sel>maxValue</sel>
          <desc>
            Returns the maximum value that the slider
            represents.
          </desc>
        </method>
        <method type="double">
          <sel>minValue</sel>
          <desc>
            Returns the minimum value that the slider
            represents.
          </desc>
        </method>
        <method type="int">
          <sel>numberOfTickMarks</sel>
          <desc>
          </desc>
        </method>
        <method type="NSRect">
          <sel>rectOfTickMarkAtIndex:</sel>
          <arg type="int">index</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setAllowsTickMarkValuesOnly:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setAltIncrementValue:</sel>
          <arg type="double">increment</arg>
          <desc>
            Sets the value by which the slider will be
            incremented, when the ALT key is held down, to
            <var>increment</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setImage:</sel>
          <arg type="NSImage*">backgroundImage</arg>
          <desc>
            Sets the image to be displayed in the slider's track
            to <var>barImage</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setKnobThickness:</sel>
          <arg type="float">aFloat</arg>
          <desc>
            Sets the thickness of the knob to <var>thickness</var>
            , in pixels. This value sets the amount of space which
            the knob takes up in the slider's track.
          </desc>
        </method>
        <method type="void">
          <sel>setMaxValue:</sel>
          <arg type="double">aDouble</arg>
          <desc>
            Sets the maximum value that the sliders represents to
            <var>maxValue</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setMinValue:</sel>
          <arg type="double">aDouble</arg>
          <desc>
            Sets the minimum value that the slider represents to
            <var>minValue</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setNumberOfTickMarks:</sel>
          <arg type="int">numberOfTickMarks</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setTickMarkPosition:</sel>
          <arg type="NSTickMarkPosition">position</arg>
          <desc>
          </desc>
        </method>
        <method type="void">
          <sel>setTitle:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            Sets the title of the slider to <var>barTitle</var>.
            This title is displayed on the slider's track, behind
            the knob.
          </desc>
        </method>
        <method type="void">
          <sel>setTitleCell:</sel>
          <arg type="NSCell*">aCell</arg>
          <desc>
            Sets the cell used to draw the title to
            <var>titleCell</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setTitleColor:</sel>
          <arg type="NSColor*">aColor</arg>
          <desc>
            Sets the colour with which the title will be drawn to
            <var>color</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setTitleFont:</sel>
          <arg type="NSFont*">fontObject</arg>
          <desc>
            Sets the font with which the title will be drawm to
            <var>font</var>.
          </desc>
        </method>
        <method type="NSTickMarkPosition">
          <sel>tickMarkPosition</sel>
          <desc>
          </desc>
        </method>
        <method type="double">
          <sel>tickMarkValueAtIndex:</sel>
          <arg type="int">index</arg>
          <desc>
          </desc>
        </method>
        <method type="NSString*">
          <sel>title</sel>
          <desc>
            Returns the title of the slider as an
            <code>NSString</code>.
          </desc>
        </method>
        <method type="id">
          <sel>titleCell</sel>
          <desc>
            Returns the cell used to draw the title.
          </desc>
        </method>
        <method type="NSColor*">
          <sel>titleColor</sel>
          <desc>
            Returns the colour used to draw the title.
          </desc>
        </method>
        <method type="NSFont*">
          <sel>titleFont</sel>
          <desc>
            Returns the font used to draw the title.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
